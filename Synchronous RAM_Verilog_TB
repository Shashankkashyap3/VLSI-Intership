`timescale 1ns / 1ps

module tb_sync_ram;

parameter DATA_WIDTH = 8;
parameter ADDR_WIDTH = 4;

reg clk;
reg we, re;
reg [ADDR_WIDTH-1:0] addr;
reg [DATA_WIDTH-1:0] din;
wire [DATA_WIDTH-1:0] dout;

// Instantiate RAM
sync_ram #(DATA_WIDTH, ADDR_WIDTH) ram_inst (
    .clk(clk),
    .we(we),
    .re(re),
    .addr(addr),
    .din(din),
    .dout(dout)
);

// Clock generator
always #5 clk = ~clk;

initial begin
    $display("Time\tWE RE Addr Din Dout");
    $monitor("%0dns\t%b  %b  %h   %h   %h", $time, we, re, addr, din, dout);

    // Init
    clk = 0; we = 0; re = 0; addr = 0; din = 0;

    // Write data
    #10 addr = 4'h3; din = 8'hA5; we = 1; re = 0;
    #10 we = 0;

    // Write another data
    #10 addr = 4'h5; din = 8'h3C; we = 1;
    #10 we = 0;

    // Read first data
    #10 addr = 4'h3; re = 1;
    #10 re = 0;

    // Read second data
    #10 addr = 4'h5; re = 1;
    #10 re = 0;

    // End simulation
    #20 $stop;
end

endmodule
